{"version":3,"sources":["components/BoxContainer.js","App.js","reportWebVitals.js","index.js"],"names":["BoxContainer","useState","data","setdata","state","setstate","action","setaction","deleteItem","ind","filterdData","filter","item","index","localStorage","setItem","JSON","stringify","useEffect","parse","getItem","Fragment","className","id","onSubmit","event","preventDefault","trim","olddata","olddatanew","unshift","length","alert","type","placeholder","value","onChange","target","map","completeStatus","inProgressStatus","content","onClick","editItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ca0dc17.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport '../css/boxContainer.css';\r\n\r\nconst BoxContainer=()=>{\r\n    const [data, setdata] = useState([]);\r\n    const [state, setstate] = useState(\"\");\r\n    const [action,setaction]=useState(\"Add Task\");  \r\n    const saveValue=(event)=>{\r\n        setstate(event.target.value);\r\n    }\r\n    const deleteItem=(ind)=>{\r\n        const filterdData= data.filter((item,index)=>{\r\n            return ind !== index;\r\n        });\r\n        setdata(()=>{ return filterdData});\r\n        localStorage.setItem(\"localdata\",JSON.stringify(filterdData));\r\n     }\r\n     const completeItem=(ind)=>{\r\n        setdata((olddata)=>{ \r\n          const olddatanew= olddata!=null?olddata.map((item,index)=>{\r\n                if(ind==index){\r\n                  if(item.completeStatus) \r\n                    return {\r\n                            ...item,\r\n                            \"completeStatus\":false\r\n                        }\r\n                   else \r\n                    return {\r\n                        ...item,\r\n                        \"completeStatus\":true\r\n                }\r\n                }\r\n                else\r\n                    return item;\r\n            }\r\n           ):[];\r\n           localStorage.setItem(\"localdata\",JSON.stringify(olddatanew));\r\n           return olddatanew;\r\n        }\r\n        )};\r\n     const progressItem=(ind)=>{\r\n        setdata((olddata)=>{ \r\n            const olddatanew= olddata!=null?olddata.map((item,index)=>{\r\n                  if(ind==index){\r\n                    if(item.inProgressStatus) \r\n                      return {\r\n                              ...item,\r\n                              \"inProgressStatus\":false\r\n                          }\r\n                     else \r\n                      return {\r\n                          ...item,\r\n                          \"inProgressStatus\":true\r\n                  }\r\n                  }\r\n                  else\r\n                      return item;\r\n              }\r\n             ):[];\r\n             localStorage.setItem(\"localdata\",JSON.stringify(olddatanew));\r\n             return olddatanew;\r\n            })\r\n     }\r\n     const editItem=(item,index)=>{\r\n        if(state===\"\"||state.trim()===\"\")\r\n            {   \r\n                setstate(item.content);\r\n                setaction(\"Edit\");\r\n                deleteItem(index);\r\n            }\r\n        else {\r\n            alert(\"Add or remove the task of input field first \")\r\n        }\r\n     }\r\n    const getFormData=(event)=>{\r\n        event.preventDefault();\r\n        if(state !== \"\" && state.trim()!==\"\")\r\n            {  \r\n                setdata((olddata)=>{ \r\n                const olddatanew=olddata!=null?[...olddata]:[];\r\n                olddatanew.unshift({\r\n                    \"content\":state,\r\n                    \"completeStatus\":false,\r\n                    \"inProgressStatus\":false\r\n                });\r\n                localStorage.setItem(\"localdata\",JSON.stringify(olddatanew));\r\n                return olddatanew;\r\n               });\r\n               \r\n            }\r\n         else if(state.length!==0 && state.trim()===\"\"){\r\n            alert(\"Only White Spaces Not Allowed\");\r\n        }  \r\n        setstate(\"\");\r\n        setaction(\"Add Task\");\r\n        localStorage.setItem(\"localdata\",JSON.stringify(data)); \r\n    };\r\n   useEffect(() => {\r\n      setdata(JSON.parse(localStorage.getItem(\"localdata\")))\r\n   }, []);\r\n   \r\n      return(\r\n        <React.Fragment>  \r\n            <div className=\"box-container\">\r\n            <div className=\"AddEventContainer\">\r\n                    <form id=\"form\" onSubmit={getFormData}>\r\n                        <div className=\"text\">\r\n                            <input type=\"text\" id=\"eventInputtext\" placeholder=\"Enter Task\" value={state} onChange={saveValue}  />\r\n                        </div>\r\n                        <div className=\"submitbtn\">\r\n                            <input type=\"submit\" id=\"submitbtn\" value={action}/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"List\">\r\n                    <ul id=\"listUl\">\r\n                        {   \r\n                            data!=null?data.map((item,index)=>{\r\n                                return(     \r\n                                    <li key={index} className={item.completeStatus?\"completedClass\":item.inProgressStatus?\"progressClass\":\"\"}>\r\n                                        <div>\r\n                                            <p>{item.content}</p>\r\n                                        </div>\r\n                                        <div>\r\n                                        <button className=\"editbtn\" onClick={()=>editItem(item,index)}>Edit</button>\r\n                                        <button className=\"completedbtn\" onClick={()=>completeItem(index)}>Completed</button>\r\n                                        <button className=\"progressbtn\" onClick={()=>progressItem(index)}>In Progress</button>\r\n                                        <button className=\"deletebtn\" onClick={()=>deleteItem(index)}>Delete</button>\r\n                                        </div>\r\n                                    </li>    \r\n                            )\r\n                            }):<></>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n        );\r\n    \r\n}\r\nexport default BoxContainer;","import './App.css';\nimport BoxContainer from './components/BoxContainer';\nfunction App() {\n  return (\n   <div className=\"main-container\">\n     <BoxContainer>\n        \n     </BoxContainer>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}